/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { EmployeeProjectsListRelationFilter } from "../../employeeProjects/base/EmployeeProjectsListRelationFilter";
import { EmployeeRolesListRelationFilter } from "../../employeeRoles/base/EmployeeRolesListRelationFilter";
import { EmployeeTasksListRelationFilter } from "../../employeeTasks/base/EmployeeTasksListRelationFilter";

@InputType()
class EmployeesWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeProjectsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeProjectsListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeProjectsListRelationFilter, {
    nullable: true,
  })
  employeeProjectsItems?: EmployeeProjectsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeRolesListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeRolesListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeRolesListRelationFilter, {
    nullable: true,
  })
  employeeRolesItems?: EmployeeRolesListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeTasksListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeTasksListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeTasksListRelationFilter, {
    nullable: true,
  })
  employeeTasksItems?: EmployeeTasksListRelationFilter;
}

export { EmployeesWhereInput as EmployeesWhereInput };
