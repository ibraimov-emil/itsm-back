/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { EmployeeProjectsListRelationFilter } from "../../employeeProjects/base/EmployeeProjectsListRelationFilter";
import { ServicesWhereUniqueInput } from "../../services/base/ServicesWhereUniqueInput";
import { ClientsWhereUniqueInput } from "../../clients/base/ClientsWhereUniqueInput";
import { StatusesWhereUniqueInput } from "../../statuses/base/StatusesWhereUniqueInput";
import { RequestsWhereUniqueInput } from "../../requests/base/RequestsWhereUniqueInput";

@InputType()
class ProjectsWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeProjectsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeProjectsListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeProjectsListRelationFilter, {
    nullable: true,
  })
  employeeProjectsItems?: EmployeeProjectsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ServicesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServicesWhereUniqueInput)
  @IsOptional()
  @Field(() => ServicesWhereUniqueInput, {
    nullable: true,
  })
  service?: ServicesWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ClientsWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ClientsWhereUniqueInput)
  @IsOptional()
  @Field(() => ClientsWhereUniqueInput, {
    nullable: true,
  })
  client?: ClientsWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => StatusesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StatusesWhereUniqueInput)
  @IsOptional()
  @Field(() => StatusesWhereUniqueInput, {
    nullable: true,
  })
  status?: StatusesWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RequestsWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RequestsWhereUniqueInput)
  @IsOptional()
  @Field(() => RequestsWhereUniqueInput, {
    nullable: true,
  })
  request?: RequestsWhereUniqueInput;
}

export { ProjectsWhereInput as ProjectsWhereInput };
