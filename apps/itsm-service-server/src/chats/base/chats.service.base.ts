/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Chats as PrismaChats } from "@prisma/client";

export class ChatsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ChatsCountArgs, "select">): Promise<number> {
    return this.prisma.chats.count(args);
  }

  async chatsItems(args: Prisma.ChatsFindManyArgs): Promise<PrismaChats[]> {
    return this.prisma.chats.findMany(args);
  }
  async chats(args: Prisma.ChatsFindUniqueArgs): Promise<PrismaChats | null> {
    return this.prisma.chats.findUnique(args);
  }
  async createChats(args: Prisma.ChatsCreateArgs): Promise<PrismaChats> {
    return this.prisma.chats.create(args);
  }
  async updateChats(args: Prisma.ChatsUpdateArgs): Promise<PrismaChats> {
    return this.prisma.chats.update(args);
  }
  async deleteChats(args: Prisma.ChatsDeleteArgs): Promise<PrismaChats> {
    return this.prisma.chats.delete(args);
  }
}
